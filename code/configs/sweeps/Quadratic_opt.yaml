program: code/main.py
method: random 
metric:
  name: final/global_eprew_mean
  goal: maximize

parameters:
  wandb_project:
    values: ['sweep_mode']
  seed: 
    distribution: int_uniform
    min: 0
    max: 1_000
  log_freq: 
    values: [100]
  eval_freq: 
    values: [100]
  save_freq: 
    values: [10_000_000]
  num_evals:
    values: [5]

  ## setting (general)
  env_name: 
    values: [Quadratic_opt]
  train_mode:
    values: [cl, mtl]
  total_timesteps: 
    values:        [2_000, 4_000, 8_000, 16_000, 32_000, 64_000, 128_000, 256_000, 512_000, 1_024_000]
    probabilities: [0.02,  0.02,  0.02,  0.02,   0.02,   0.75,   0.02,     0.02,    0.02,    0.09]
  nb_tasks: 
    values:        [2,    4,    8,    16,   32,   64,   128,  256]
    probabilities: [0.05, 0.05, 0.05, 0.05, 0.65, 0.05, 0.05, 0.05]
  max_episode_steps: 
    values: [100]
  obs_dim: 
    values:        [2,    4,    8,    16,  32]
    probabilities: [0.09, 0.09, 0.09, 0.5, 0.23]

  ## method (general)
  lr: 
    distribution: log_uniform_values
    min: 0.00001
    max: 0.1
  batch_size: 
    distribution: int_uniform 
    min: 2
    max: 256
  replay_size: 
    values: [1_000, 10_000, 100_000, 1_000_000]
  burn_in: 
    distribution: int_uniform 
    min: 2
    max: 100
  warm_up: 
    min: 2
    max: 100
  context_dim: 
    values: [30] 
  hidden_dim: 
    values: [8, 16, 32, 64, 128] 
  num_hidden_layers: 
    values: [2]
  curr_task_sampl_prob: 
    values: [0, 0.5, 0.8]
  use_auto_entropy: 
    values: [True, False]

  ## method (specific)
  method_config: 
    values: [
      'ER-ID', 'ER-MH', 'ERv', 'FineTuning', 'TrainFromScratch',
      '3RL', '3RL-ID', '3RL-MH', 'FineTuning-RNN',
      'ER-TX'
    ]
  history_length: 
    values: [2, 4, 8, 16]
  tx_hidden_dim:
    values: [8, 16] 
  tx_nb_heads:
    values: [1, 2]
  tx_pos_enc:
    values: [sinusoidal, learned]
  tx_token_emb:
    values: [True, False]
